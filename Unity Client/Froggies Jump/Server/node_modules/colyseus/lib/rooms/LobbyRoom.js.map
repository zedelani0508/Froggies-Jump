{"version":3,"file":"LobbyRoom.js","sourceRoot":"","sources":["../../src/rooms/LobbyRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import * as matchMaker from '../MatchMaker';\nimport { RoomListingData } from '../matchmaker/drivers/Driver';\nimport { subscribeLobby } from '../matchmaker/Lobby';\nimport { Room } from '../Room';\nimport { Client } from '../transport/Transport';\n\n// TODO: use Schema state & filters on version 1.0.0\n\n// class DummyLobbyState extends Schema { // tslint:disable-line\n//   @type(\"number\") public _: number;\n// }\n\nexport interface FilterInput {\n  name?: string;\n  metadata?: any;\n}\n\nexport interface LobbyOptions {\n  filter?: FilterInput;\n}\n\nexport class LobbyRoom extends Room { // tslint:disable-line\n  public rooms: RoomListingData[] = [];\n  public unsubscribeLobby: () => void;\n\n  public clientOptions: { [sessionId: string]: LobbyOptions } = {};\n\n  public async onCreate(options: any) {\n    // prevent LobbyRoom to notify itself\n    this.listing.unlisted = true;\n\n    this.unsubscribeLobby = await subscribeLobby((roomId, data) => {\n      const roomIndex = this.rooms.findIndex((room) => room.roomId === roomId);\n\n      // console.log(\"LOBBY RECEIVING UPDATE:\", { roomId, data, roomIndex });\n\n      if (!data) {\n        // remove room listing data\n        if (roomIndex !== -1) {\n          const previousData = this.rooms[roomIndex];\n\n          this.rooms.splice(roomIndex, 1);\n\n          this.clients.forEach((client) => {\n            if (this.filterItemForClient(previousData, this.clientOptions[client.sessionId].filter)) {\n              client.send('-', roomId);\n            }\n          });\n        }\n\n      } else if (roomIndex === -1) {\n        // append room listing data\n        this.rooms.push(data);\n\n        this.clients.forEach((client) => {\n          if (this.filterItemForClient(data, this.clientOptions[client.sessionId].filter)) {\n            client.send('+', [roomId, data]);\n          }\n        });\n\n      } else {\n        const previousData = this.rooms[roomIndex];\n\n        // replace room listing data\n        this.rooms[roomIndex] = data;\n\n        this.clients.forEach((client) => {\n          const hadData = this.filterItemForClient(previousData, this.clientOptions[client.sessionId].filter);\n          const hasData = this.filterItemForClient(data, this.clientOptions[client.sessionId].filter);\n\n          if (hadData && !hasData) {\n            client.send('-', roomId);\n\n          } else if (hasData) {\n            client.send('+', [roomId, data]);\n          }\n        });\n      }\n    });\n\n    this.rooms = await matchMaker.query({ private: false, unlisted: false });\n\n    this.onMessage('filter', (client: Client, filter: FilterInput) => {\n      this.clientOptions[client.sessionId].filter = filter;\n      client.send('rooms', this.filterItemsForClient(this.clientOptions[client.sessionId]));\n    });\n  }\n\n  public onJoin(client: Client, options: LobbyOptions) {\n    this.clientOptions[client.sessionId] = options || {};\n    client.send('rooms', this.filterItemsForClient(this.clientOptions[client.sessionId]));\n  }\n\n  public onLeave(client: Client) {\n    delete this.clientOptions[client.sessionId];\n  }\n\n  public onDispose() {\n    if (this.unsubscribeLobby) {\n      this.unsubscribeLobby();\n    }\n  }\n\n  protected filterItemsForClient(options: LobbyOptions) {\n    const filter = options.filter;\n\n    return (filter)\n      ? this.rooms.filter((room) => this.filterItemForClient(room, filter))\n      : this.rooms;\n  }\n\n  protected filterItemForClient(room: RoomListingData, filter?: LobbyOptions['filter']) {\n    if (!filter) {\n      return true;\n    }\n\n    let isAllowed = true;\n\n    if (filter.name !== room.name) {\n      isAllowed = false;\n    }\n\n    if (filter.metadata) {\n      for (const field in filter.metadata) {\n        if (room.metadata[field] !== filter.metadata[field]) {\n          isAllowed = false;\n          break;\n        }\n      }\n    }\n\n    return isAllowed;\n  }\n\n}\n"]}