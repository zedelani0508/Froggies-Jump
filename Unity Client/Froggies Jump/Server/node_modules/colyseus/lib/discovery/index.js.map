{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/discovery/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,8DAA6B;AAG7B,MAAM,SAAS,GAAG,gBAAgB,CAAC;AACnC,MAAM,iBAAiB,GAAG,0BAA0B,CAAC;AAOrD,SAAe,cAAc,CAAC,IAAU;;QACtC,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,KAAI,MAAM,qBAAE,CAAC,EAAE,EAAE,CAAA,CAAC;QACxD,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC;QAChD,OAAO,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;IAC7C,CAAC;CAAA;AAED,SAAsB,YAAY,CAAC,QAAkB,EAAE,IAAU;;QAC/D,MAAM,WAAW,GAAG,MAAM,cAAc,CAAC,IAAI,CAAC,CAAC;QAC/C,MAAM,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC5C,MAAM,QAAQ,CAAC,OAAO,CAAC,iBAAiB,EAAE,OAAO,WAAW,EAAE,CAAC,CAAC;IAClE,CAAC;CAAA;AAJD,oCAIC;AAED,SAAsB,cAAc,CAAC,QAAkB,EAAE,IAAU;;QACjE,MAAM,WAAW,GAAG,MAAM,cAAc,CAAC,IAAI,CAAC,CAAC;QAC/C,MAAM,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC5C,MAAM,QAAQ,CAAC,OAAO,CAAC,iBAAiB,EAAE,UAAU,WAAW,EAAE,CAAC,CAAC;IACrE,CAAC;CAAA;AAJD,wCAIC","sourcesContent":["import ip from 'internal-ip';\nimport { Presence } from '../presence/Presence';\n\nconst NODES_SET = 'colyseus:nodes';\nconst DISCOVERY_CHANNEL = 'colyseus:nodes:discovery';\n\nexport interface Node {\n  port: number;\n  processId: string;\n}\n\nasync function getNodeAddress(node: Node) {\n  const host = process.env.SELF_HOSTNAME || await ip.v4();\n  const port = process.env.SELF_PORT || node.port;\n  return `${node.processId}/${host}:${port}`;\n}\n\nexport async function registerNode(presence: Presence, node: Node) {\n  const nodeAddress = await getNodeAddress(node);\n  await presence.sadd(NODES_SET, nodeAddress);\n  await presence.publish(DISCOVERY_CHANNEL, `add,${nodeAddress}`);\n}\n\nexport async function unregisterNode(presence: Presence, node: Node) {\n  const nodeAddress = await getNodeAddress(node);\n  await presence.srem(NODES_SET, nodeAddress);\n  await presence.publish(DISCOVERY_CHANNEL, `remove,${nodeAddress}`);\n}\n"]}