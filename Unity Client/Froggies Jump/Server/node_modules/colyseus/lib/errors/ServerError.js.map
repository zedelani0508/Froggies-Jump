{"version":3,"file":"ServerError.js","sourceRoot":"","sources":["../../src/errors/ServerError.ts"],"names":[],"mappings":";;;AAAA,0CAAwC;AAExC,MAAa,WAAY,SAAQ,KAAK;IAGpC,YAAY,OAAe,oBAAS,CAAC,mBAAmB,EAAE,OAAgB;QACxE,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,qFAAqF;QACrF,IAAI,KAAK,CAAC,iBAAiB,EAAE;YAC3B,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;SAC5C;QAED,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;CACF;AAdD,kCAcC","sourcesContent":["import { ErrorCode } from '../Protocol';\n\nexport class ServerError extends Error {\n  public code: number;\n\n  constructor(code: number = ErrorCode.MATCHMAKE_UNHANDLED, message?: string) {\n    super(message);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ServerError);\n    }\n\n    this.name = 'ServerError';\n    this.code = code;\n  }\n}\n"]}