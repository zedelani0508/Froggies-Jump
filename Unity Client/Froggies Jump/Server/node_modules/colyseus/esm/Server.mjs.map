{"version":3,"file":"Server.mjs","sources":["../src/Server.ts"],"sourcesContent":["import http, { IncomingMessage, ServerResponse } from 'http';\nimport net from 'net';\nimport WebSocket from 'ws';\nimport { ServerOptions as IServerOptions } from 'ws';\n\nimport { debugAndPrintError, debugMatchMaking } from './Debug';\nimport * as matchMaker from './MatchMaker';\nimport { RegisteredHandler } from './matchmaker/RegisteredHandler';\nimport { Presence } from './presence/Presence';\n\nimport { Room } from './Room';\nimport { Type } from './types';\nimport { registerGracefulShutdown } from './Utils';\n\nimport { generateId } from '.';\nimport { registerNode, unregisterNode } from './discovery';\nimport { LocalPresence } from './presence/LocalPresence';\n\nimport { ServerError } from './errors/ServerError';\nimport { ErrorCode, Protocol } from './Protocol';\nimport { Transport } from './transport/Transport';\n\nimport { TCPTransport } from './transport/TCP/TCPTransport';\nimport { WebSocketTransport } from './transport/WebSocket/WebSocketTransport';\n\nexport type ServerOptions = IServerOptions & {\n  pingInterval?: number,\n  pingMaxRetries?: number,\n\n  /**\n   * @deprecated use `pingInterval` instead\n   */\n  pingTimeout?: number,\n\n  /**\n   * @deprecated use `pingMaxRetries` instead\n   */\n  pingCountMax?: number,\n\n  /**\n   * @deprecated remove on version 0.12.x\n   */\n  express?: any,\n\n  verifyClient?: WebSocket.VerifyClientCallbackAsync\n  presence?: Presence,\n  driver?: matchMaker.MatchMakerDriver,\n  engine?: any,\n  ws?: any,\n  gracefullyShutdown?: boolean,\n};\n\nexport class Server {\n  public transport: Transport;\n\n  protected presence: Presence;\n  protected processId: string = generateId();\n  protected matchmakeRoute = 'matchmake';\n\n  private exposedMethods = ['joinOrCreate', 'create', 'join', 'joinById'];\n  private allowedRoomNameChars = /([a-zA-Z_\\-0-9]+)/gi;\n\n  constructor(options: ServerOptions = {}) {\n    const { gracefullyShutdown = true } = options;\n\n    this.presence = options.presence || new LocalPresence();\n\n    // setup matchmaker\n    matchMaker.setup(this.presence, options.driver, this.processId);\n\n    // \"presence\" option is not used from now on\n    delete options.presence;\n\n    this.attach(options);\n\n    if (gracefullyShutdown) {\n      registerGracefulShutdown((err) => this.gracefullyShutdown(true, err));\n    }\n  }\n\n  public attach(options: ServerOptions) {\n    if (!options.server) { options.server = http.createServer(); }\n    options.server.once('listening', () => this.registerProcessForDiscovery());\n\n    this.attachMatchMakingRoutes(options.server);\n\n    const engine = options.engine || WebSocket.Server;\n    delete options.engine;\n\n    this.transport = (engine === net.Server)\n      ? new TCPTransport(options)\n      : new WebSocketTransport(options, engine);\n  }\n\n  /**\n   * Bind the server into the port specified.\n   *\n   * @param port\n   * @param hostname\n   * @param backlog\n   * @param listeningListener\n   */\n  public async listen(port: number, hostname?: string, backlog?: number, listeningListener?: Function) {\n    return new Promise<void>((resolve, reject) => {\n      this.transport.server.on('error', (err) => reject(err));\n      this.transport.listen(port, hostname, backlog, (err) => {\n        if (listeningListener) {\n          listeningListener(err);\n        }\n\n        if (err) {\n          reject(err);\n\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  public registerProcessForDiscovery() {\n    // register node for proxy/service discovery\n    registerNode(this.presence, {\n      port: this.transport.address().port,\n      processId: this.processId,\n    });\n  }\n\n  /**\n   * Define a new type of room for matchmaking.\n   *\n   * @param name public room identifier for match-making.\n   * @param handler Room class definition\n   * @param defaultOptions default options for `onCreate`\n   */\n  public define<T extends Type<Room>>(\n    name: string,\n    handler: T,\n    defaultOptions?: Parameters<NonNullable<InstanceType<T>['onCreate']>>[0],\n  ): RegisteredHandler {\n    return matchMaker.defineRoomType(name, handler, defaultOptions);\n  }\n\n  public async gracefullyShutdown(exit: boolean = true, err?: Error) {\n    await unregisterNode(this.presence, {\n      port: this.transport.address()?.port,\n      processId: this.processId,\n    });\n\n    try {\n      await matchMaker.gracefullyShutdown();\n      this.transport.shutdown();\n      await this.onShutdownCallback();\n\n    } catch (e) {\n      debugAndPrintError(`error during shutdown: ${e}`);\n\n    } finally {\n      if (exit) {\n        process.exit(err ? 1 : 0);\n      }\n    }\n  }\n\n  /**\n   * Add simulated latency between client and server.\n   * @param milliseconds round trip latency in milliseconds.\n   */\n  public simulateLatency(milliseconds: number) {\n    console.warn(`Colyseus latency simulation enabled â†’ ${milliseconds}ms latency for round trip.`);\n\n    const halfwayMS = (milliseconds / 2);\n    this.transport.simulateLatency(halfwayMS);\n\n    /* tslint:disable:no-string-literal */\n    const _onMessage = Room.prototype['_onMessage'];\n    /* tslint:disable:no-string-literal */\n    Room.prototype['_onMessage'] = function(...args: any[]) {\n      setTimeout(() => _onMessage.apply(this, args), halfwayMS);\n    };\n  }\n\n  /**\n   * Register a callback that is going to be executed before the server shuts down.\n   * @param callback\n   */\n  public onShutdown(callback: () => void | Promise<any>) {\n    this.onShutdownCallback = callback;\n  }\n\n  protected onShutdownCallback: () => void | Promise<any> =\n    () => Promise.resolve()\n\n  protected attachMatchMakingRoutes(server: http.Server) {\n    const listeners = server.listeners('request').slice(0);\n    server.removeAllListeners('request');\n\n    server.on('request', (req, res) => {\n      if (req.url.indexOf(`/${this.matchmakeRoute}`) !== -1) {\n        debugMatchMaking('received matchmake request: %s', req.url);\n        this.handleMatchMakeRequest(req, res);\n\n      } else {\n        for (let i = 0, l = listeners.length; i < l; i++) {\n          listeners[i].call(server, req, res);\n        }\n      }\n    });\n  }\n\n  protected async handleMatchMakeRequest(req: IncomingMessage, res: ServerResponse) {\n    const headers = {\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n      'Access-Control-Allow-Methods': 'OPTIONS, POST, GET',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Max-Age': 2592000,\n      // ...\n    };\n\n    if (req.method === 'OPTIONS') {\n      res.writeHead(204, headers);\n      res.end();\n\n    } else if (req.method === 'POST') {\n      const matchedParams = req.url.match(this.allowedRoomNameChars);\n      const matchmakeIndex = matchedParams.indexOf(this.matchmakeRoute);\n      const method = matchedParams[matchmakeIndex + 1];\n      const name = matchedParams[matchmakeIndex + 2] || '';\n\n      const data = [];\n      req.on('data', (chunk) => data.push(chunk));\n      req.on('end', async () => {\n        headers['Content-Type'] = 'application/json';\n        res.writeHead(200, headers);\n\n        const body = JSON.parse(Buffer.concat(data).toString());\n        try {\n          if (this.exposedMethods.indexOf(method) === -1) {\n            throw new ServerError(ErrorCode.MATCHMAKE_NO_HANDLER, `invalid method \"${method}\"`);\n          }\n\n          const response = await matchMaker[method](name, body);\n          res.write(JSON.stringify(response));\n\n        } catch (e) {\n          res.write(JSON.stringify({\n            code: e.code || ErrorCode.MATCHMAKE_UNHANDLED,\n            error: e.message,\n          }));\n        }\n\n        res.end();\n      });\n\n    } else if (req.method === 'GET') {\n      const matchedParams = req.url.match(this.allowedRoomNameChars);\n      const roomName = matchedParams[matchedParams.length - 1];\n\n      /**\n       * list public & unlocked rooms\n       */\n      const conditions: any = {\n        locked: false,\n        private: false,\n      };\n\n      // TODO: improve me, \"matchmake\" room names aren't allowed this way.\n      if (roomName !== this.matchmakeRoute) {\n        conditions.name = roomName;\n      }\n\n      headers['Content-Type'] = 'application/json';\n      res.writeHead(200, headers);\n      res.write(JSON.stringify(await matchMaker.query(conditions)));\n      res.end();\n    }\n\n  }\n\n}\n"],"names":["matchMaker.setup","net","matchMaker.defineRoomType","matchMaker.gracefullyShutdown","matchMaker","matchMaker.query"],"mappings":"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"}